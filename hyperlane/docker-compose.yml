version: '3'
services:
  hyperlane-deployer:
    build:
      context: ./hyperlane-deployer
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "test -f /hyperlane-monorepo/artifacts/done-warp-route || exit 1"]
      interval: 5s
      retries: 100
    environment:
      - HYPERLANE_DEPLOYER_PRIVATE_KEY=${HYPERLANE_DEPLOYER_PRIVATE_KEY}
    networks:
      primev_net:
        ipv4_address: '172.29.0.50'
    volumes:
      - hyperlane-deploy-artifacts:/hyperlane-monorepo/artifacts
    profiles:
      - bridge
  
  hyperlane-validator1:
    build:
      context: ./hyperlane-validator
      dockerfile: Dockerfile
      args:
        # Image can be built for arm64 with https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/rust/build.sh
        - AGENT_BASE_IMAGE=${AGENT_BASE_IMAGE}
        - SETTLEMENT_RPC_URL=${SETTLEMENT_RPC_URL}
    # Reuse geth private key for validator
    command: ./validator --validator.key ${NODE1_PRIVATE_KEY} --chains.mevcommitsettlement.signer.key ${NODE1_PRIVATE_KEY} --checkpointSyncer.path /val1-sigs
    # TODO: evaluate why container needs to run as root
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    networks:
      primev_net:
        ipv4_address: '172.29.0.75'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator1-sigs:/val1-sigs
      - hyperlane-validator1-db:/val-db
    profiles:
      - bridge
  
  hyperlane-validator2:
    build:
      context: ./hyperlane-validator
      dockerfile: Dockerfile
      args:
        - AGENT_BASE_IMAGE=${AGENT_BASE_IMAGE}
        - SETTLEMENT_RPC_URL=${SETTLEMENT_RPC_URL}
    # Reuse geth private key for validator
    command: ./validator --validator.key ${NODE2_PRIVATE_KEY} --chains.mevcommitsettlement.signer.key ${NODE2_PRIVATE_KEY} --checkpointSyncer.path /val2-sigs
    # TODO: evaluate why container needs to run as root
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    networks:
      primev_net:
        ipv4_address: '172.29.0.76'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator2-sigs:/val2-sigs
      - hyperlane-validator2-db:/val-db
    profiles:
      - bridge
  
  hyperlane-relayer:
    build:
      context: ./hyperlane-relayer
      dockerfile: Dockerfile
      args:
        - AGENT_BASE_IMAGE=${AGENT_BASE_IMAGE}
    user: "0:0"
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    environment:
      - RELAYER_PRIVATE_KEY=${RELAYER_PRIVATE_KEY}
    networks:
      primev_net:
        ipv4_address: '172.29.0.77'
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
      - hyperlane-validator1-sigs:/val1-sigs
      - hyperlane-validator2-sigs:/val2-sigs
      - hyperlane-relayer-db:/relayer-db
    profiles:
      - bridge
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_WALLET_CONNECT_ID=${NEXT_PUBLIC_WALLET_CONNECT_ID}
    depends_on:
      hyperlane-deployer:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_WALLET_CONNECT_ID=${NEXT_PUBLIC_WALLET_CONNECT_ID}
      - SETTLEMENT_RPC_URL=${SETTLEMENT_RPC_URL}
      - PUBLIC_SETTLEMENT_RPC_URL=${PUBLIC_SETTLEMENT_RPC_URL}
    networks:
      primev_net:
        ipv4_address: '172.29.0.90'
    ports:
      - 80:3000
    volumes:
      - hyperlane-deploy-artifacts:/deploy-artifacts
    profiles:
      - bridge
  
  user-emulator:
    build:
      context: ../
      dockerfile: hyperlane/user-emulator/Dockerfile
    # TODO: 
    # depends_on:
    #   hyperlane-deployer:
    #     condition: service_healthy
    # environment:
      # - SETTLEMENT_RPC_URL=${SETTLEMENT_RPC_URL}
    networks:
      primev_net:
        ipv4_address: '172.29.0.171'

networks:
  primev_net:
    external: true

volumes:
  hyperlane-deploy-artifacts:
  hyperlane-validator1-sigs:
  hyperlane-validator2-sigs:
  hyperlane-validator1-db:
  hyperlane-validator2-db:
  hyperlane-relayer-db:
